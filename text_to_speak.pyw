from gtts import gTTS
import pygame
import threading
import queue
import time
import os
from datetime import datetime

# Initialize pygame mixer
pygame.mixer.init()

FILENAME = 'txt_file/names.txt'
LOGFILE = 'txt_file/log.txt'
MAX_LINES = 20
last_index = 0

# ‡∏™‡∏£‡πâ‡∏≤‡∏á queue ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏™‡∏µ‡∏¢‡∏á
audio_queue = queue.Queue()
is_playing = False

print("üì¢ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå names.txt ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log...")

def get_file_mtime(path):
    try:
        return os.path.getmtime(path)
    except FileNotFoundError:
        return None

def audio_player_worker():
    """Worker thread ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå"""
    global is_playing
    
    while True:
        try:
            # ‡∏£‡∏≠‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å queue
            mp3_filename = audio_queue.get(timeout=1)
            
            if mp3_filename is None:  # Signal to stop
                break
                
            is_playing = True
            #print(f"üéµ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á: {os.path.basename(mp3_filename)}")
            
            # ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á
            pygame.mixer.music.load(mp3_filename)
            pygame.mixer.music.play()
            
            # ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏à‡∏ö
            while pygame.mixer.music.get_busy():
                time.sleep(0.1)
            
            # ‡∏´‡∏¢‡∏∏‡∏î music
            pygame.mixer.music.stop()
            
            is_playing = False
            audio_queue.task_done()
            
        except queue.Empty:
            # ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô queue ‡∏£‡∏≠‡∏ï‡πà‡∏≠
            continue
        except Exception as e:
            print(f"‚ùó ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á: {e}")
            is_playing = False
            if 'mp3_filename' in locals():
                audio_queue.task_done()

def add_to_audio_queue(mp3_filename):
    """‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏Ç‡πâ‡∏≤ queue"""
    audio_queue.put(mp3_filename)
    queue_size = audio_queue.qsize()
    #print(f"üìã ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß: {os.path.basename(mp3_filename)} (‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà {queue_size})")

# ‡πÄ‡∏£‡∏¥‡πà‡∏° worker thread ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á
audio_thread = threading.Thread(target=audio_player_worker, daemon=True)
audio_thread.start()

while True:
    try:
        #print("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå...")
        
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡πà‡∏≤‡∏ô
        before_read_mtime = get_file_mtime(FILENAME)

        with open(FILENAME, 'r', encoding='utf-8') as file:
            lines = [line.strip() for line in file if line.strip()]

        #print(f"üìñ ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ {len(lines)} ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î, ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {last_index}")
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏™‡∏µ‡∏¢‡∏á
        queue_size = audio_queue.qsize()
        playing_status = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô" if is_playing else "‡∏ß‡πà‡∏≤‡∏á"
        #print(f"üéµ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏™‡∏µ‡∏¢‡∏á: {playing_status}, ‡∏Ñ‡∏¥‡∏ß‡∏£‡∏≠: {queue_size} ‡πÑ‡∏ü‡∏•‡πå")

        # ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà
        if last_index < len(lines):
            new_lines = lines[last_index:]
            print(f"üÜï ‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà {len(new_lines)} ‡∏ä‡∏∑‡πà‡∏≠")
            
            for name in new_lines:
                full_text = f"‡∏ô‡πâ‡∏≠‡∏á {name} ‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡∏°‡∏≤‡∏£‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß"
                print(f"üîä ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á: {full_text}")

                try:
                    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á
                    tts = gTTS(full_text, lang='th')
                    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå temp ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
                    os.makedirs("temp", exist_ok=True)
                    mp3_filename = os.path.join("temp", f"voice_{int(time.time())}_{hash(name)}.mp3")
                    tts.save(mp3_filename)
                    
                    #print(f"üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå: {mp3_filename}")

                    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏™‡∏µ‡∏¢‡∏á (‡∏à‡∏∞‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå)
                    add_to_audio_queue(mp3_filename)

                    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log
                    with open(LOGFILE, 'a', encoding='utf-8') as log:
                        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                        log.write(f"[{timestamp}] ‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏á {name}\n")
                    
                    print(f"üìù ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log: {name}")
                    
                except Exception as e:
                    print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏±‡∏ö {name}: {e}")

            last_index = len(lines)
            #print(f"üìç ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô: {last_index}")

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
        if len(lines) >= MAX_LINES:
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏≠‡πà‡∏≤‡∏ô
            after_read_mtime = get_file_mtime(FILENAME)
            if before_read_mtime == after_read_mtime:
                print(f"‚ö†Ô∏è ‡∏Ñ‡∏£‡∏ö {MAX_LINES} ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï names.txt")
                with open(FILENAME, 'w', encoding='utf-8') as f:
                    f.write("")
                last_index = 0
                print("üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
            else:
                print("‚è≥ ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏•‡∏ö ‚Äî ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß")

    except FileNotFoundError:
        print("‚ùó ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå names.txt ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà...")
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏õ‡∏•‡πà‡∏≤‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ
        os.makedirs('txt_file', exist_ok=True)
        with open(FILENAME, 'w', encoding='utf-8') as f:
            f.write("")
    except Exception as e:
        print(f"üí• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô main loop: {e}")

    time.sleep(2)